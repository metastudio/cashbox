- transaction = transaction.transfer_in if transaction.transfer_out? && transaction.transfer_in
tr.transaction id=dom_id(transaction) class=colorize_transaction(transaction) data-edit-url=edit_transaction_path(transaction)
  td.col-sm-2 = money_with_symbol transaction.amount

  td.col-sm-2.word-break
    = link_to transaction.category.to_s,
      root_path(q: (params_unsafe_hash[:q] || {}).merge(category_id_in: transaction.category.id)),
      data: { stop_propagation: true } if transaction.category
  td.col-sm-3.word-break
    - if transaction.transfer?
      => link_to transaction.transfer_out.try(:bank_account).to_s,
        root_path(q: (params_unsafe_hash[:q] || {}).merge(bank_account_id_in: transaction.transfer_out.bank_account.id)),
        data: { stop_propagation: true } if transaction.transfer_out.try(:bank_account)
      |->
      =< link_to transaction.bank_account.to_s,
        root_path(q: (params_unsafe_hash[:q] || {}).merge(bank_account_id_in: transaction.bank_account.id)),
        data: { stop_propagation: true } if transaction.bank_account
    - else
      = link_to transaction.bank_account.to_s,
        root_path(q: (params_unsafe_hash[:q] || {}).merge(bank_account_id_in: transaction.bank_account.id)),
        data: { stop_propagation: true } if transaction.bank_account
  td.col-sm-2.word-break
    = link_to transaction.customer.to_s,
      root_path(q: (params_unsafe_hash[:q] || {}).merge(customer_id_in: transaction.customer_id)),
      data: { stop_propagation: true } if transaction.customer_id
  td.col-sm-2.word-break.comment.hidden-xs = transaction.comment
  td.col-sm-1= I18n.l transaction.date
