= simple_form_for(@invoice, html: { class: 'invoice' }) do |f|
  = f.error_notification

  .form-inputs
    = f.input :currency, collection: Dictionaries.currencies, autofocus: true
    = f.input :number, input_html: { maxlength: 16 }
    = f.input :customer_name, input_html: { class: 'customer-select2', data: { url: autocomplete_customers_path,
      placeholder: 'Customer',
      value: current_organization.find_customer_name_by_id(f.object.customer_id) } }, required: true
    = f.input :starts_at, as: :string, placeholder: 'Start date',
      input_html: { class: 'datepicker', value: f.object.starts_at.present? ? l(f.object.starts_at) : nil }
    = f.input :ends_at, as: :string, placeholder: 'End date',
      input_html: { class: 'datepicker', value: f.object.ends_at.present? ? l(f.object.ends_at) : nil }
    = f.input :amount, disabled: @invoice.invoice_items.any?, input_html: { maxlength: 25 }
    = f.input :sent_at, as: :string, placeholder: 'Sent date',
      input_html: { class: 'datepicker', value: f.object.sent_at.present? ? l(f.object.sent_at) : nil }
    = f.input :paid_at, as: :string, placeholder: 'Paid date',
      input_html: { class: 'datepicker', value: f.object.paid_at.present? ? l(f.object.paid_at) : nil }
    #invoice
      h4 Invoice items
      table.table.invoice-form-items
        tbody
          = f.fields_for :invoice_items do |i|
            = render 'invoice_item_fields', f: i
      .links= link_to_add_association 'Add item', f, :invoice_items

  .form-actions
    = f.button :submit_with_disable, class: 'btn-primary'
